#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

console.log('üîß Configurando integra√ß√£o com sistema principal...\n');

// Configura√ß√µes
const configs = {
  frontend: {
    envFile: path.join(__dirname, 'frontend', '.env'),
    envContent: `# Configura√ß√£o de ambiente para o sistema de cota√ß√£o
# URL da API do sistema principal (onde est√£o os fornecedores)
REACT_APP_MAIN_API_URL=http://localhost:3001/api

# URL da API do sistema de cota√ß√£o
REACT_APP_API_URL=http://82.29.57.43:5000

# Configura√ß√µes adicionais
REACT_APP_ENV=development
`
  },
  backend: {
    envFile: path.join(__dirname, 'backend', '.env'),
    envContent: `# Configura√ß√µes do Backend
NODE_ENV=development
PORT=5000
JWT_SECRET=sua_chave_secreta_muito_segura_aqui

# Configura√ß√µes do Banco de Dados
DB_HOST=localhost
DB_USER=root
DB_PASSWORD=password
DB_NAME=cotacao_db
DB_PORT=3306

# Configura√ß√µes do Frontend
REACT_APP_API_URL=http://localhost:5000

# URL da API do sistema principal para integra√ß√£o
MAIN_API_URL=http://localhost:3001/api
`
  }
};

// Fun√ß√£o para criar arquivo .env
function createEnvFile(filePath, content) {
  try {
    if (fs.existsSync(filePath)) {
      console.log(`‚ö†Ô∏è  Arquivo ${filePath} j√° existe. Pulando...`);
      return false;
    }
    
    fs.writeFileSync(filePath, content);
    console.log(`‚úÖ Arquivo ${filePath} criado com sucesso!`);
    return true;
  } catch (error) {
    console.error(`‚ùå Erro ao criar ${filePath}:`, error.message);
    return false;
  }
}

// Fun√ß√£o para verificar se os diret√≥rios existem
function checkDirectories() {
  const dirs = [
    path.join(__dirname, 'frontend'),
    path.join(__dirname, 'backend')
  ];
  
  for (const dir of dirs) {
    if (!fs.existsSync(dir)) {
      console.error(`‚ùå Diret√≥rio n√£o encontrado: ${dir}`);
      return false;
    }
  }
  
  return true;
}

// Fun√ß√£o principal
function main() {
  console.log('üìÅ Verificando estrutura de diret√≥rios...');
  
  if (!checkDirectories()) {
    console.error('‚ùå Estrutura de diret√≥rios inv√°lida. Execute este script na raiz do projeto.');
    process.exit(1);
  }
  
  console.log('‚úÖ Estrutura de diret√≥rios OK!\n');
  
  console.log('üìù Criando arquivos de configura√ß√£o...\n');
  
  let created = 0;
  
  // Criar arquivo .env do frontend
  if (createEnvFile(configs.frontend.envFile, configs.frontend.envContent)) {
    created++;
  }
  
  // Criar arquivo .env do backend
  if (createEnvFile(configs.backend.envFile, configs.backend.envContent)) {
    created++;
  }
  
  console.log(`\nüìä Resumo:`);
  console.log(`   - Arquivos criados: ${created}/2`);
  
  if (created > 0) {
    console.log('\nüéâ Configura√ß√£o conclu√≠da!');
    console.log('\nüìã Pr√≥ximos passos:');
    console.log('   1. Ajuste as URLs nos arquivos .env conforme seu ambiente');
    console.log('   2. Certifique-se de que o sistema principal est√° rodando');
    console.log('   3. Reinicie os servi√ßos do sistema de cota√ß√£o');
    console.log('   4. Teste a busca de fornecedores nas telas de cota√ß√£o');
  } else {
    console.log('\n‚ö†Ô∏è  Nenhum arquivo foi criado. Verifique se j√° existem.');
  }
  
  console.log('\nüìö Documenta√ß√£o:');
  console.log('   - Leia o arquivo INTEGRACAO_FORNECEDORES.md para mais detalhes');
  console.log('   - Verifique as configura√ß√µes de CORS no sistema principal');
  console.log('   - Teste a autentica√ß√£o entre os sistemas');
}

// Executar script
main(); 