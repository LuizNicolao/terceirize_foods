user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    
    # Upstream servers
    upstream foods_backend {
        server foods_backend:3001;
    }
    
    upstream cotacao_backend {
        server cotacao_backend:3002;
    }
    
    upstream cozinha_backend {
        server cozinha_backend:3003;
    }
    
    upstream implantacao_backend {
        server implantacao_backend:3004;
    }
    
    # Main server block
    server {
        listen 80;
        server_name api.terceirizemais.com.br;
        
        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        
        # Rate limiting
        limit_req zone=api burst=20 nodelay;
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Internal API endpoints (for system-to-system communication)
        location /internal/ {
            # Allow only Docker internal networks
            allow 172.16.0.0/12;  # Docker networks
            allow 10.0.0.0/8;     # Internal networks
            allow 192.168.0.0/16; # Local networks
            deny all;
            
            # Remove /internal prefix before proxying
            rewrite ^/internal/(.*) /$1 break;
            
            # Proxy to specific systems
            location ~ ^/(foods|cotacao|cozinha|implantacao)/(.*) {
                set $system $1;
                set $path $2;
                
                if ($system = foods) {
                    proxy_pass http://foods_backend/api/public/$path;
                }
                if ($system = cotacao) {
                    proxy_pass http://cotacao_backend/api/public/$path;
                }
                if ($system = cozinha) {
                    proxy_pass http://cozinha_backend/api/public/$path;
                }
                if ($system = implantacao) {
                    proxy_pass http://implantacao_backend/api/public/$path;
                }
                
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                
                # Timeout settings
                proxy_connect_timeout 30s;
                proxy_send_timeout 30s;
                proxy_read_timeout 30s;
            }
        }
        
        # Public API endpoints (with JWT authentication)
        location /api/ {
            # JWT validation will be added here
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Route to specific systems
            location /api/foods/ {
                proxy_pass http://foods_backend/api/;
            }
            
            location /api/cotacao/ {
                proxy_pass http://cotacao_backend/api/;
            }
            
            location /api/cozinha/ {
                proxy_pass http://cozinha_backend/api/;
            }
            
            location /api/implantacao/ {
                proxy_pass http://implantacao_backend/api/;
            }
        }
        
        # Default route
        location / {
            return 404 '{"error": "Endpoint not found"}';
            add_header Content-Type application/json;
        }
    }
}
